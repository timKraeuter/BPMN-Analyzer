plugins {
    id 'java'
    // Analysis
    id "org.sonarqube" version "4.4.0.3356"
    id 'jacoco'
    id "net.ltgt.errorprone" version "3.1.0"
    id "com.diffplug.spotless" version "6.21.0"
}

group = 'no.hvl.tk'
version = '1'
sourceCompatibility = '20'

repositories {
    mavenCentral()
}

dependencies {
    // Use the camunda API to read BPMN models.
    // https://mvnrepository.com/artifact/org.camunda.bpm.model/camunda-bpmn-model
    implementation group: 'org.camunda.bpm.model', name: 'camunda-bpmn-model', version: '7.20.0'

    // XML-marshalling not part of jdk 11 anymore.
    // https://mvnrepository.com/artifact/jakarta.xml.bind/jaxb-api
    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.1'
    // https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime
    implementation("org.glassfish.jaxb:jaxb-runtime:4.0.3")

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation 'commons-io:commons-io:2.13.0'
    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation 'com.google.guava:guava:32.1.2-jre'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    // String substitution for Maude.
    // https://mvnrepository.com/artifact/org.apache.commons/commons-text
    implementation 'org.apache.commons:commons-text:1.10.0'

    // https://mvnrepository.com/artifact/org.eclipse.elk/org.eclipse.elk.core
    implementation 'org.eclipse.elk:org.eclipse.elk.core:0.7.1'
    // https://mvnrepository.com/artifact/org.eclipse.elk/org.eclipse.elk.alg.layered
    implementation 'org.eclipse.elk:org.eclipse.elk.alg.layered:0.7.1'

    // https://mvnrepository.com/artifact/org.hamcrest/hamcrest
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    // Logging
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'



    errorprone("com.google.errorprone:error_prone_core:2.18.0")
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "timkraeuter_Groove_Rule_Generation_Generator"
        property "sonar.organization", "timkraeuter"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.exclusions", "src/main/java/no/tk/groove/gxl/**"
    }
}

tasks.named('sonarqube').configure {
    dependsOn jacocoTestReport
}

tasks.compileJava {
    // Ignore classes generated from XSD.
    options.errorprone.excludedPaths = ".*/src/main/java/no/tk/groove/gxl/.*"
}

spotless {
    java {
        googleJavaFormat()
        formatAnnotations()
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'no.tk.groove.behaviortransformer.bpmn.BPMNTransformerDriver'
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    // Builds a fat jar.
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}