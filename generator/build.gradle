plugins {
    id 'java'
    // Analysis
    id 'org.sonarqube' version '5.1.0.4882'
    id 'jacoco'
    id 'net.ltgt.errorprone' version '4.0.1'
    id 'com.diffplug.spotless' version '6.25.0'
}

group = 'no.hvl.tk'
version = '1'

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // Rule generation
    implementation 'io.github.timKraeuter:graph-rule-generation:1.5'

    // Use the camunda API to read BPMN models.
    implementation group: 'org.camunda.bpm.model', name: 'camunda-bpmn-model', version: '7.23.0'

    // https://mvnrepository.com/artifact/jakarta.xml.bind/jakarta.xml.bind-api
    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.2'
    implementation('org.glassfish.jaxb:jaxb-runtime:4.0.5')

    implementation 'commons-io:commons-io:2.19.0'
    implementation 'com.google.guava:guava:33.4.8-jre'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    // String substitution for Maude.
    implementation 'org.apache.commons:commons-text:1.13.1'

    // Logging
    implementation 'org.apache.logging.log4j:log4j-api:2.23.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'

    // Test
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '3.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.3'

    errorprone('com.google.errorprone:error_prone_core:2.18.0')
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

sonarqube {
    properties {
        property 'sonar.projectKey', 'timkraeuter_Groove_Rule_Generation_Generator'
        property 'sonar.organization', 'timkraeuter'
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.exclusions', 'src/main/java/no/tk/groove/gxl/**'
    }
}

tasks.named('sonar').configure {
    dependsOn jacocoTestReport
}

tasks.compileJava {
    // Ignore classes generated from XSD.
    options.errorprone.excludedPaths = '.*/src/main/java/no/tk/groove/gxl/.*'
}

spotless {
    java {
        googleJavaFormat()
        formatAnnotations()
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'no.tk.groove.behaviortransformer.bpmn.BPMNToGrooveTransformerCLI'
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    // Builds a fat jar.
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}