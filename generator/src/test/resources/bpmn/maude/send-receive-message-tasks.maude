load model-checker.maude .

--- Multiset implementation could be extracted as well.
fmod MSET is pr
    STRING .
    sorts NeMSet MSet .
    subsort String < NeMSet < MSet .

    op none : -> MSet [ctor] .
    op __ : MSet MSet -> MSet [ctor assoc comm id: none] .
    op __ : NeMSet MSet -> NeMSet [ctor ditto] .
    op __ : MSet NeMSet -> NeMSet [ctor ditto] .
endfm

mod BPMN-EXECUTION is
    pr MSET .
    pr STRING .
    pr CONFIGURATION .

    sort ProcessState .

    ops Running, Terminated : -> ProcessState [ctor] .
    op tokens :_ : MSet -> Attribute [ctor] .
    op messages :_ : MSet -> Attribute [ctor] .
    op subprocesses :_ : Configuration -> Attribute [ctor] .
    op state :_ : ProcessState -> Attribute [ctor] .
    op ProcessSnapshot : -> Cid [ctor] .
    subsort String < Oid .

    var P : String .

    rl [terminateProcess] :
    < P : ProcessSnapshot | tokens : none, messages : none, subprocesses : none, state : Running >
                            =>
    < P : ProcessSnapshot | tokens : none, messages : none, subprocesses : none, state : Terminated > .
endm

mod BPMN-EXECUTION-send-receive-message-tasks is
    pr BPMN-EXECUTION .

    var T : MSet . --- Tokens
    var M : MSet . --- Messages
    var S : Configuration .

    --- Generated rules
    rl [start_p1_Event_0hvckwm] :  < "p1" : ProcessSnapshot | tokens : ("start_p1 (Event_0hvckwm)" T), messages : (M), subprocesses : (S), state : Running > => < "p1" : ProcessSnapshot | tokens : ("start_p1_TSend_1 (Flow_1kebatm)" T), messages : (M), subprocesses : (S), state : Running > .
    rl [TSend_1_Activity_0snhxon_start] :  < "p1" : ProcessSnapshot | tokens : ("start_p1_TSend_1 (Flow_1kebatm)" T), messages : (M), subprocesses : (S), state : Running > => < "p1" : ProcessSnapshot | tokens : ("TSend_1 (Activity_0snhxon)" T), messages : (M), subprocesses : (S), state : Running > .
    rl [TSend_1_Activity_0snhxon_end] :  < "p1" : ProcessSnapshot | tokens : ("TSend_1 (Activity_0snhxon)" T), messages : (M), subprocesses : (S), state : Running > < "p2" : ProcessSnapshot | tokens : ("start_p2_TReceive_1 (Flow_0ryj8bj)" T), messages : (M), subprocesses : (S), state : Running > => < "p1" : ProcessSnapshot | tokens : ("TSend_1_EReceive_1 (Flow_1gg7pzo)" T), messages : (M), subprocesses : (S), state : Running > < "p2" : ProcessSnapshot | tokens : ("start_p2_TReceive_1 (Flow_0ryj8bj)" T), messages : ("TSend_1_TReceive_1" M), subprocesses : (S), state : Running > .
    rl [EReceive_1_Event_18wra1x] :  < "p1" : ProcessSnapshot | tokens : ("TSend_1_EReceive_1 (Flow_1gg7pzo)" T), messages : ("TSend_2_EReceive_1" M), subprocesses : (S), state : Running > => < "p1" : ProcessSnapshot | tokens : ("EReceive_1_end_p1 (Flow_1gnyidc)" T), messages : (M), subprocesses : (S), state : Running > .
    rl [end_p1_Event_1mtui5y] :  < "p1" : ProcessSnapshot | tokens : ("EReceive_1_end_p1 (Flow_1gnyidc)" T), messages : (M), subprocesses : (S), state : Running > < "p2" : ProcessSnapshot | tokens : ("TSend_2_TReceive_2 (Flow_0qihtu9)" T), messages : (M), subprocesses : (S), state : Running > => < "p1" : ProcessSnapshot | tokens : (T), messages : (M), subprocesses : (S), state : Running > < "p2" : ProcessSnapshot | tokens : ("TSend_2_TReceive_2 (Flow_0qihtu9)" T), messages : ("end_p1_TReceive_2" M), subprocesses : (S), state : Running > .
    rl [start_p2_Event_08kfzn9] :  < "p2" : ProcessSnapshot | tokens : ("start_p2 (Event_08kfzn9)" T), messages : (M), subprocesses : (S), state : Running > => < "p2" : ProcessSnapshot | tokens : ("start_p2_TReceive_1 (Flow_0ryj8bj)" T), messages : (M), subprocesses : (S), state : Running > .
    rl [TReceive_1_Activity_080al3m_start] :  < "p2" : ProcessSnapshot | tokens : ("start_p2_TReceive_1 (Flow_0ryj8bj)" T), messages : ("TSend_1_TReceive_1" M), subprocesses : (S), state : Running > => < "p2" : ProcessSnapshot | tokens : ("TReceive_1 (Activity_080al3m)" T), messages : (M), subprocesses : (S), state : Running > .
    rl [TReceive_1_Activity_080al3m_end] :  < "p2" : ProcessSnapshot | tokens : ("TReceive_1 (Activity_080al3m)" T), messages : (M), subprocesses : (S), state : Running > => < "p2" : ProcessSnapshot | tokens : ("TReceive_1_TSend_2 (Flow_1m7cc47)" T), messages : (M), subprocesses : (S), state : Running > .
    rl [TSend_2_Activity_1p2iyoi_start] :  < "p2" : ProcessSnapshot | tokens : ("TReceive_1_TSend_2 (Flow_1m7cc47)" T), messages : (M), subprocesses : (S), state : Running > => < "p2" : ProcessSnapshot | tokens : ("TSend_2 (Activity_1p2iyoi)" T), messages : (M), subprocesses : (S), state : Running > .
    rl [TSend_2_Activity_1p2iyoi_end] :  < "p2" : ProcessSnapshot | tokens : ("TSend_2 (Activity_1p2iyoi)" T), messages : (M), subprocesses : (S), state : Running > < "p1" : ProcessSnapshot | tokens : ("TSend_1_EReceive_1 (Flow_1gg7pzo)" T), messages : (M), subprocesses : (S), state : Running > => < "p2" : ProcessSnapshot | tokens : ("TSend_2_TReceive_2 (Flow_0qihtu9)" T), messages : (M), subprocesses : (S), state : Running > < "p1" : ProcessSnapshot | tokens : ("TSend_1_EReceive_1 (Flow_1gg7pzo)" T), messages : ("TSend_2_EReceive_1" M), subprocesses : (S), state : Running > .
    rl [TReceive_2_Activity_0paqxj7_start] :  < "p2" : ProcessSnapshot | tokens : ("TSend_2_TReceive_2 (Flow_0qihtu9)" T), messages : ("end_p1_TReceive_2" M), subprocesses : (S), state : Running > => < "p2" : ProcessSnapshot | tokens : ("TReceive_2 (Activity_0paqxj7)" T), messages : (M), subprocesses : (S), state : Running > .
    rl [TReceive_2_Activity_0paqxj7_end] :  < "p2" : ProcessSnapshot | tokens : ("TReceive_2 (Activity_0paqxj7)" T), messages : (M), subprocesses : (S), state : Running > => < "p2" : ProcessSnapshot | tokens : ("TReceive_2_end_p2 (Flow_1oin9h6)" T), messages : (M), subprocesses : (S), state : Running > .
    rl [end_p2_Event_1e53c3i] :  < "p2" : ProcessSnapshot | tokens : ("TReceive_2_end_p2 (Flow_1oin9h6)" T), messages : (M), subprocesses : (S), state : Running > => < "p2" : ProcessSnapshot | tokens : (T), messages : (M), subprocesses : (S), state : Running > .

    --- Start configuration which would be generated
    op init : -> Configuration .
    eq init = < "p1" : ProcessSnapshot | tokens : ("start_p1 (Event_0hvckwm)"), messages : (none), subprocesses : (none), state : Running >
    < "p2" : ProcessSnapshot | tokens : ("start_p2 (Event_08kfzn9)"), messages : (none), subprocesses : (none), state : Running > .
endm

mod BPMN-PREDS is
    pr BPMN-EXECUTION-send-receive-message-tasks .
    pr SATISFACTION .
    subsort Configuration < State .

    var C : Configuration .
    var P : Prop .
    var X : Oid .
    var T : MSet .
    var M : MSet .
    var T1 : NeMSet .
    var S : Configuration .
    var State : ProcessState .


    op allTerminated : -> Prop .
    eq < X : ProcessSnapshot | tokens : T, messages : M, subprocesses : S, state : Running > C |= allTerminated = false .
    eq C |= allTerminated = true [owise] .

    op unsafe : -> Prop .
    eq < X : ProcessSnapshot | tokens : (T1 T1 T), messages : M, subprocesses : S, state : State > C |= unsafe = true .
    eq C |= unsafe = false [owise] .

    --- Generated atomic propositions
    --- no propositions
endm

mod BPMN-CHECK is
    pr BPMN-PREDS .
    pr MODEL-CHECKER .
    pr LTL-SIMPLIFIER .
endm

red modelCheck(init,  <> [] allTerminated) .
